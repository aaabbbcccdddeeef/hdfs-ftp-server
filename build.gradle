plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.1'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id 'java'
    id 'distribution'
}

// 所有模块/项目的通用配置
allprojects {
    group 'cn.linshenkx.bigdata'
    version '2.0'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        mavenLocal()
    }

    // 指定JDK版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // 指定编码格式
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    ext {//依赖版本
        springBootVersion = "2.6.1"
        ftpserverVersion = "1.1.1"
        guavaVersion = "31.0.1-jre"
        commonsLang3Version = "3.12.0"
        hutoolVersion = "5.7.16"
        slf4jVersion = "1.7.32"
        lombokVersion = "1.18.22"
    }

    // 管理版本
    dependencyManagement {
        dependencies {
            dependency "org.springframework.boot:spring-boot-starter:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
            dependency "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
            dependency "org.apache.ftpserver:ftpserver-core:${ftpserverVersion}"
            dependency "com.google.guava:guava:${guavaVersion}"
            dependency "org.apache.commons:commons-lang3:${commonsLang3Version}"
            dependency "cn.hutool:hutool-all:${hutoolVersion}"
            dependency "org.slf4j:slf4j-api:${slf4jVersion}"

            dependency "org.projectlombok:lombok:${lombokVersion}"
        }
    }

}
// 子模块/项目的统一配置
subprojects {
    dependencies{
        implementation 'org.apache.ftpserver:ftpserver-core'
    }
}

def implModules() {
    subprojects.findAll {it.name.contains('hdfs-ftp-server-impl')}
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.logging.log4j') {
            details.useVersion '2.17.0'
        }
    }
}
configure(implModules()) {
    apply plugin: 'com.github.johnrengelman.shadow'
    shadowJar {
        //No FileSystem for scheme: hdfs  : https://www.jianshu.com/p/7eb8e46a7bac
        //https://github.com/johnrengelman/shadow/issues/105
        // https://www.jianshu.com/p/7eb8e46a7bac
        mergeServiceFiles()

        archiveClassifier.set('shadow')
//        archiveBaseName.set('shadow')
//        archiveClassifier.set('')
        archiveVersion.set('')
        // 这些依赖都在hdfs-ftp-server-facade工程，在bootJar中已经提供，不需要重复打入。
        dependencies {
            exclude(project(':hdfs-ftp-server-facade'))
            exclude(dependency('org.apache.ftpserver:ftpserver-core:.*'))
            exclude(dependency('com.google.guava:guava:.*'))
            exclude(dependency('org.apache.commons:commons-lang3:.*'))
            exclude(dependency('cn.hutool:hutool-all:.*'))
            exclude(dependency('org.slf4j:slf4j-api:.*'))
        }
        from("./") {
            include 'build.gradle'
        }
    }

    task copyJars(type: Copy) {
        dependsOn shadowJar
        include '**/*shadow*.jar'
        from('build/libs')
        into('../build/package/lib')
    }
}

def bootModule() {
    subprojects.findAll {it.name.contains('hdfs-ftp-server-boot')}
}

configure(bootModule()) {
    task copyJars(type: Copy) {
        dependsOn build
        exclude '**/*plain.jar'
        from('build/libs')
        into('../build/package/lib')
    }
}

task cleanAll(){
    dependsOn subprojects.clean
    dependsOn clean
}

task createDirs() {
    file('build').deleteOnExit()
    file('build').mkdirs()
    file('build/package').mkdirs()
    file('build/package/bin').mkdirs()
    file('build/package/conf').mkdirs()
    file('build/package/lib').mkdirs()
}

task prepareJars() {
    dependsOn bootModule().build
    dependsOn implModules().shadowJar
}
task copyLibs() {
    dependsOn bootModule().copyJars
    dependsOn implModules().copyJars
}
task copyBin(type: Copy) {
    from 'distribution/bin'
    into 'build/package/bin'
}
task copyConf(type: Copy) {
    from 'hdfs-ftp-server-boot/src/main/resources'
    from 'distribution/conf'
    into 'build/package/conf'
}
task copyMd(type: Copy) {
    from 'README.md'
    into 'build/package/'
}

task copyAll(dependsOn: [
        'copyMd',
        'copyLibs',
        'copyConf',
        'copyBin'
]) {}

//distributions插件配置
//指定打包的tar包的名字，以及文件来源目录
distributions {
    main {
        distributionBaseName = 'hdfs-ftp-server'
        contents {
            from { 'build/package' }
            filesMatching('**/*.sh') { mode = 0744 }
        }
    }

}
distTar.dependsOn 'copyAll'
distTar.compression = Compression.GZIP

//assembleDist 依赖于 distTar和distZip
assembleDist.mustRunAfter('clean')
task buildTarZip(dependsOn: [
        'assembleDist'
]) {
}


task copyTarToDockerfile(type: Copy, dependsOn: ['buildTarZip']) {
    from('build/distributions/hdfs-ftp-server.tgz')
    into 'dockerfile/'
}